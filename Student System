#include <stdio.h>
#include <stdlib.h>
#include <string.h>


struct StudentClass //学生数据类 
{
	char number[12]; //学号	
	
	char name[12]; //姓名 
	char sex[4]; //性别 
	char department[12]; //系部 
	char major[12]; //专业
	char grade[8]; //年级 
}stu[100];

struct string //专 业数据类 
{
	char str[10]; //专 业 
}maj[10];

void menu();
void input();
void save(int m,int f);
void display();
void del();
void search();
void modify();
int cmp_u(const void *a,const void *b);
int cmp_d(const void *a,const void *b);
int cmp_1(const void *a,const void *b);
int cmp_2(const void *a,const void *b);
int cmp_3(const void *a,const void *b);
void array();
void sort();


void main(void) 
{
	int n,flag=0;
	while(1)
	{
	 
		do
		{
			menu();
			printf("请选择您需要操作的步骤(1--6):\n");
			scanf("%d",&n);
			if(n>=1&&n<=6)
			{
				flag=1;
				break;
			}
			else
			{
				flag=0;
				printf("您输入有误，请按任意键重试!");
				getch() ;
				system("cls");
			}
		}while(flag==0);
			
		switch(n)
		{
			case 1:
				printf(" 输入学生信息\n");
				printf("\n");
				system("cls");
				input();
				break;
			case 2:
				printf(" 浏览学生信息\n");
				printf("\n");
				system("cls");
				display();
				break;
			case 3:
				printf(" 按职姓名查询学生信息\n");
				printf("\n");
				system("cls");
				search();
				break; 
			case 4:
				printf(" 删除学生信息\n");
				printf("\n");
				system("cls");
				del();
				break;
			case 5:
				printf(" 修改学生信息\n");
				printf("\n");
				system("cls");
				modify();
				break;
			case 6:
				goto la;
			default :
				break;
		}
	
	}
	
	la:
		system("cls"); 
		printf("\n\n====================谢谢使用！====================\n\n");
		printf("\n==============作者：软件(三)班 郭晋儒===============\n\n");
		printf("按任意键推出...\n"); 
		getch();
	

}

void menu() //菜单
{
	printf("\n");
	printf("\t\t\t\t ==================学生信息管理==================\n");
	printf("\t\t\t\t *\t\t"); 
	printf(" 1.录入学生信息");
	printf("\t\t\t*\n");
	printf("\t\t\t\t *\t\t");
	printf(" 2.浏览学生信息");
	printf("\t\t\t*\n");
	printf("\t\t\t\t *\t\t");
	printf(" 3.查询学生信息");
	printf("\t\t\t*\n");
	printf("\t\t\t\t *\t\t");
	printf(" 4.删除学生信息");
	printf("\t\t\t*\n");
	printf("\t\t\t\t *\t\t");
	printf(" 5.修改学生信息");
	printf("\t\t\t*\n");
	printf("\t\t\t\t *\t\t");
	printf(" 6.退        出");
	printf("\t\t\t*\n");
	printf("\t\t\t\t ====================欢迎使用====================\n");
	printf("\n");
	printf("\n");
}

void input() //录入学生信息
{
	int i,m,k=0;
	char s;
	char st[10]="";
	printf("请输入需要创建信息的学生人数(1--100):\n");
	scanf("%d",&m);
	system("cls");
	for(i=0;i<m;i++)
	{
		k=0;
		st[0]='\0';
		printf("请输入学号： ");
		
		do
		{
		
			s=getch();

			if(s>47 && s<58)
			{
				printf("%c",s);
				st[k]=s;
				st[k+1]='\0';
				k++;
			}
			else if(s==13 && s==0)
			{
				continue;
			}
			else if(s==13)
			{
				break;
			}
			else
			{
				continue;
			}	
		}while(k<10);
		strcpy(stu[i].number,st);
		
		printf("\n");
		printf("请输入姓名: ");
		scanf("%s",stu[i].name);
		getchar();
		printf("请输入性别：");
		scanf("%s",stu[i].sex);
		getchar();
		printf("请输入系部: ");
		scanf("%s",stu[i].department);
		getchar();
		printf("请输入专业: ");
		scanf("%s",stu[i].major);
		getchar();
		printf("请输入年级: ");
		scanf("%s",stu[i].grade);
		getchar();
		
		printf("\n");
	
	}
	printf("\n创建完毕!\n");
	system("cls");
	save(m,0);
}

void save(int m,int f) //保存数据  f: 0代表已有文件 1 代表无文件 
{
	int i;
	FILE *fp;
	if(f==1)
	{
		fp=fopen("student_db","wb");
	}
	else
	{
		fp=fopen("student_db","ab");
	}

	if (fp==NULL) 
	{
		printf("无法打开文件\n");
		printf("按任意键继续...\n"); 
		getch();
		exit(0);
	}
	for (i=0;i<m;i++)
	if (fwrite(&stu[i],sizeof(struct StudentClass),1,fp)!=1)
	printf("无法写入文件\n");
	fclose(fp);
}

int read() //读取数据 
{
	FILE *fp;
	int i=0;
	fp=fopen("student_db","rb");
	if(fp==NULL)
	{
		printf ("无法打开文件\n");
		printf("按任意键继续...\n"); 
		getch();
		exit(0);
	}
	else 
	{
		do 
		{
			fread(&stu[i],sizeof(struct StudentClass),1,fp);
			i++;
		}
		while(feof(fp)==0);
	}
	fclose(fp);
	return(i-1);
}

void display() //浏览数据 
{
	int i,t;
	int m=read();
	
	printf("请选择您的浏览方式：正常浏览按 1 ；学号排序浏览按 2 ; 分类浏览按 3 \n");
	do
	{
		scanf("%d",&t);
		system("cls");
		if(t<1 && t> 3)
		{
			printf("选择错误，请重试\n");
			system("cls");
			
		}
		else if(t==1)
		{
			break;
		}
		else if(t==2)
		{
			array();
			break;
		}
		else if(t==3)
		{
			sort();
			return;
		}
		
		 
	}while(1);
	
	printf("\n % -10s\t % -8s\t % -2s\t % -8s\t % -8s\t %s\t \n","学 号","姓 名","性 别","系 部","专 业","年 级");
	for(i=0;i<m;i++)
	{ 
		printf("\n % -10s\t % -8s\t % -2s\t % -8s\t % -8s\t %s\n",stu[i].number,stu[i].name,stu[i].sex,stu[i].department,stu[i].major,stu[i].grade); 
		
	} 
	printf("按任意键继续\n");
	getch();
	system("cls");
}

void del() //删除数据 
{

	int m=read();
	int i,j,n,t,flag;
	char number[8];
	printf("\n 原来的学生信息:\n");
	display(); 
	printf("\n");
	printf("请输入要删除的学生的学 号:\n");
	scanf("%s",number);
	for(flag=1,i=0;flag&&i<m;i++)
	{
		if(strcmp(stu[i].number,number)==0)
		{
			printf("\n已找到此人，原始记录为：\n");
			printf("\n % -10s\t % -8s\t % -2s\t % -8s\t % -8s\t %s\t \n","学 号","姓 名","性 别","系 部","专 业","年 级");
			printf("\n % -10s\t % -8s\t % -2s\t % -8s\t % -8s\t %s\n",stu[i].number,stu[i].name,stu[i].sex,stu[i].department,stu[i].major,stu[i].grade); 
			printf("\n确实要删除此人信息请按1,不删除请按0\n");
			scanf("%d",&n);
			if(n==1) 
			{
				for(j=i;j<m-1;j++)
				{
					stu[j]=stu[j+1];
				
				}
				flag=0;
			}
		}
	}
	if(!flag)
	{
		m=m-1;
	}
	else
	{
	
		printf("\n对不起，查无此人!\n");
	}
	if(flag==0)
	{
		printf("\n 浏览删除后的所有学生信息:\n");
		save(m,1); 
		display(); 
	} 
	
	printf("\n继续删除请按1，退出请按0\n");
	scanf("%d",&t);
	switch(t)
	{
		case 1:del();break;
		case 0:break;
		default :break;
	}
	system("cls");
}

void search() //查询数据 
{
	char name[8];
	int i,t,flag=0;
	int m=read();
	printf("请输入要查找的姓名:\n");
	scanf("%s",name);
	system("cls");
	for(i=0;i<m;i++)
	{
	
		if(strcmp(name,stu[i].name)==0)
		{
			flag=1;
					
			printf("\n % -10s\t % -8s\t % -2s\t % -8s\t % -8s\t %s\t \n","学 号","姓 名","性 别","系 部","专 业","年 级");
			printf("\n % -10s\t % -8s\t % -2s\t % -8s\t % -8s\t %s\n",stu[i].number,stu[i].name,stu[i].sex,stu[i].department,stu[i].major,stu[i].grade);
			//break;
		} 
	}
	if(flag==0) 
	{
		printf("\n对不起，查无此人\n");
	}
	printf("\n");
	printf("重新选择查询请按1,退出请安0\n");
	scanf("%d",&t);
	system("cls");
	switch(t)
	{ 
		case 1:search();break;
		case 0: break;
		default:break;
	}
}
	

void modify() //修改数据 
{
	char number[8]; 
	char name[10];
	char sex[4];
	char department[10];
	char major[10];
	char grade[6];
	int b,c,i,n,t,flag,k=0; 
	int m=read(); 
	char s;
	char st[10];
	printf("\n 原学生信息:\n");
	display();
	printf("\n");
	printf("请输入要修改的学生的学 号:\n");
	scanf("%s",number);
	getchar();
	for(flag=1,i=0;flag&&i<m;i++)
	{
		if(strcmp(stu[i].number,number)==0)
		{
			printf("\n已找到此人，原始记录为：\n");
			printf("\n % -10s\t % -8s\t % -2s\t % -8s\t % -8s\t %s\t \n","学 号","姓 名","性 别","系 部","专 业","年 级");
			printf("\n % -10s\t % -8s\t % -2s\t % -8s\t % -8s\t %s\n",stu[i].number,stu[i].name,stu[i].sex,stu[i].department,stu[i].major,stu[i].grade);
			printf("\n确实要修改此人信息请按1 ; 不修改请按0\n");
			scanf("%d",&n);
			if(n==1)
			{
				do
				{
					
					printf("\n需要进行修改的选项\n 1.学 号 2.姓名 3.性别 4.部门 5.专 业 6.年级\n"); 
					printf("请输入你想修改的那一项序号:\n"); 
					scanf("%d",&c); 
					if(c>6||c<1)
					{ 
						printf("\n选择错误，请按任意键重新选择!\n"); 
						system("cls") ;
					} 
				}while(c>6||c<1);
				
			}
			flag=0;
		
		}
	
	}
	
	if(flag==1)
	{ 
		printf("\n对不起，查无此人!\n"); 
	} 
	else
	{
		do 
		{
			switch(c) 
			{ 
				case 1:printf("学号改为: ");
					do
					{
					
						s=getch();
			
						if(s>47 && s<58)
						{
							printf("%c",s);
							st[k]=s;
							k++;
						}
						else if(s==13 && s==0)
						{
							continue;
						}
						else if(s==13)
						{
							break;
						}
						else
						{
							continue;
						}
						
						
					}while(k<8);
					strcpy(stu[i-1].number,st);
					
					break; 
				case 2:
					printf("姓名改为: ");
					scanf("%s",&name);
					strcpy(stu[i-1].name,name); 
					break; 
				case 3:
					printf("性别改为: ");
					getchar();
					scanf("%s",&sex);
					strcpy(stu[i-1].sex,sex);
					break; 
				case 4:
					printf("系部改为: ");
					scanf("%s",&department);
					getchar();
					strcpy(stu[i-1].department,department);
					break; 
				case 5:
					printf("专业改为: ");
					scanf("%s",&major); 
					getchar();
					strcpy(stu[i-1].major,major); 
					break; 
				case 6:
					printf("年级改为: ");
					scanf("%s",grade);
					getchar();
					strcpy(stu[i-1].grade,grade); 
					break; 
				
			} 
			printf("\n");
			printf("\n是否确定所修改的信息?\n 是 请按1 ; 不,重新输入 请按0: \n"); 
			scanf("%d",&b);
		
		}while(b==0);
	}
	printf("\n浏览修改后的所有学生信息:\n");
	printf("\n");
	save(m,1);
	display();
	printf("\n继续修改请按1，不再修改请按0\n");
		scanf("%d",&t);
	switch(t)
	{
		case 1:modify();break;
		case 0:break;
		default :break;
	}
	system("cls");

}

void array() //数据排序 
{
	int t;
	int m=read();
	printf("请选择您的排序方式：升序请按 1 ；降序请按 2 \n");
	scanf("%d",&t);
	system("cls");
	if(t==1)
	{
		qsort(stu,m,sizeof(struct StudentClass),cmp_u);
	}
	else
	{
		qsort(stu,m,sizeof(struct StudentClass),cmp_d);
	}
		
}



void sort() //数据分类 
{
	int m=read();

	char tp[10];
	int i,j=0;
	int c[10]={0};
	int h,k=0,n;
	struct Sort
	{
		char s[6];
	}ss[3]={"系部","专业","年级"}; 
	do

	{
		printf("请选择分类的选项：1 系部：2 专业；3 年级\n");
		scanf("%d",&n);
		system("cls");
		if(n>0 && n<4)
		{
			break;
		}
		else
		{
			printf("输入有误，请重新选择\n");
			printf("按任意键继续\n");
			getch(); 
			system("cls");
		}
	}while(1);

	switch(n)
	{
		case 1:
			qsort(stu,m,sizeof(struct StudentClass),cmp_1);
			strcpy(tp,stu[j].department);
			for(i=0;i<m;i++)
			{
				if(strcmp(stu[i].department,tp)==0)
				{			
					strcpy(maj[j].str,tp); 
					c[j]+=1;
				}
				else
				{
					strcpy(tp,stu[i].department);
					j++;
					i--;
				}
			}
			
			break;
		case 2:
			qsort(stu,m,sizeof(struct StudentClass),cmp_1);
			strcpy(tp,stu[j].major);
			for(i=0;i<m;i++)
			{
				if(strcmp(stu[i].major,tp)==0)
				{			
					strcpy(maj[j].str,tp); 
					c[j]+=1;
				}
				else
				{
					strcpy(tp,stu[i].major);
					j++;
					i--;
				}
			}
			break;
			
		case 3:
			qsort(stu,m,sizeof(struct StudentClass),cmp_1);
			strcpy(tp,stu[j].grade);
			for(i=0;i<m;i++)
			{
				if(strcmp(stu[i].grade,tp)==0)
				{			
					strcpy(maj[j].str,tp); 
					c[j]+=1;
				}
				else
				{
					strcpy(tp,stu[i].grade);
					j++;
					i--;
				}
			}
			break;	 
			
	}

	for(i=0;i<j+1;i++)
	{
		printf("%s：%s\n",ss[n-1].s,maj[i].str);
		printf("\n \t% -10s\t\t % -8s\t\t % -2s\t\t % -8s\t\t % -8s\t\t %s\t\t \n","学 号","姓 名","性 别","系 部","专 业","年 级");
			
		for(h=0;h<c[i];h++)
		{
			printf("\n \t% -10s\t\t % -8s\t\t % -2s\t\t % -8s\t\t % -8s\t\t %s\n",stu[k].number,stu[k].name,stu[k].sex,stu[k].department,stu[k].major,stu[k].grade);
			k++;
		}
	}
	printf("按任意键继续\n");
	getch();
	system("cls");
}

int cmp_1(const void *a,const void *b) //专 业排序规则 
{
	
	return strcmp( (*(struct StudentClass *)a).department , (*(struct StudentClass *)b).department ); 
	
}
int cmp_2(const void *a,const void *b) //专 业排序规则 
{
	
	return strcmp( (*(struct StudentClass *)a).major , (*(struct StudentClass *)b).major ); 
	
}
int cmp_3(const void *a,const void *b) //专 业排序规则 
{
	
	return strcmp( (*(struct StudentClass *)a).grade , (*(struct StudentClass *)b).grade ); 
	
}

int cmp_u(const void *a,const void *b) //升序规则 
{
	
	return *(int *)a-*(int *)b; //升序 
	
}

int cmp_d(const void *a,const void *b) //降序规则 
{
	
	
	return *(int *)b-*(int *)a; //降序 
}

